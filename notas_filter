'''
Filter

- Filter: Filtra dados originados de uma fun��o ou cole��o de dados

Sintaxe:   filter( fun��o, iteravel)

# Exemplos de filter
import math

numeros = [1, 4, 1, 3, 5, 6, 3, 2, 9, 7, 4, 6, 9]
result = filter(lambda num: num > math.pi, numeros)

print(result)  # Retorna um <filter object at
print(type(result))  # <class 'filter'>
print(list(result)) # Converteu em lista e imprime os valores. # Os valores se perdem ap�s sua utiliza�ao.
***

#Exemplo Filter com map

numeros = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
print('Por partes')
filter(lambda num: num % 2 == 0, numeros)
print('Foram filtrados os numeros pares')

map(lambda n: n ** 2, filter(lambda num: num % 2 == 0, numeros))
print('Map recebeu os numeros filtrados, e agora ser�o elevados ao �')
result = list(map(lambda n: n ** 2, filter(lambda num: num % 2 == 0, numeros)))
print('Convertemos as fun��es em listas, para podermos imprimir os resultados')
print(result)- Filter: Filtra dados originados de uma função ou coleção de dados

Sintaxe:   filter( função, iteravel)

# Exemplos de filter
import math

numeros = [1, 4, 1, 3, 5, 6, 3, 2, 9, 7, 4, 6, 9]
result = filter(lambda num: num > math.pi, numeros)

print(result)  # Retorna um <filter object at
print(type(result))  # <class 'filter'>
print(list(result)) # Converteu em lista e imprime os valores. # Os valores se perdem após sua utilizaçao.
***

#Exemplo Filter com map

numeros = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
print('Por partes')
filter(lambda num: num % 2 == 0, numeros)
print('Foram filtrados os numeros pares')

map(lambda n: n ** 2, filter(lambda num: num % 2 == 0, numeros))
print('Map recebeu os numeros filtrados, e agora serão elevados ao ²')
result = list(map(lambda n: n ** 2, filter(lambda num: num % 2 == 0, numeros)))
print('Convertemos as funções em listas, para podermos imprimir os resultados')
print(result)
'''